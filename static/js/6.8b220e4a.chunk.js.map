{"version":3,"sources":["_posts/http请求.md"],"names":["module","exports","title","date","tags","header_img","key","content"],"mappings":"2EAAAA,EAAAC,QAAA,CAAkBC,MAAA,mBAAAC,KAAA,sBAAAC,KAAA,iCAAAC,WAAA,KAAAC,IAAA,sBAAAC,QAAA","file":"static/js/6.8b220e4a.chunk.js","sourcesContent":["module.exports = {\"title\":\"http请求\",\"date\":\"2018-04-29 14:13:56\",\"tags\":\"http, 性能优化\",\"header_img\":\"''\",\"key\":\"http请求.md\",\"content\":\"\\n\\n# Http请求的全过程\\n\\n## 首先要了解HTTP请求头和相应头\\n\\n### HTTP请求request\\n\\n请求行 请求头 空行 请求数据\\n\\n#### 请求行\\n\\n包括请求类型，GET,POST,PUT,DELETE等，请求访问的资源，最后一部分说明使用的版本比如HTTP1.1\\n\\n#### 请求头部\\n\\n请求头一般有以下部分组成\\n\\n- Accept 请求接受类型，比如text/javascript\\n- Accept-Encoding 压缩格式，比如gzip\\n- Accept-language 语言，比如zh-CN\\n- Accept-Charset 接受内容的字符集，utf-8\\n- Cookie 用来保存一个登陆的用户信息，比如SeesionId 一些用户数据\\n- Host 请求的主机域名\\n- Referer 表示请求是从哪个URL来的\\n- Cache-Control 控制是否需要缓存\\n- User-Agent 用户代理，操作系统版本，浏览器及版本等\\n- Connection: keep-alive 长连接HTTP1.1默认自带\\n\\nwebsocket 连接 ws/wss\\n\\n- Connection: Upgrade\\n- Upgrade: websocket\\n\\n#### 请求内容\\n\\nget请求这里为空，post这里存放请求数据\\n\\n### HTTP响应response\\n\\nHTTP响应也由四个部分组成💘，分别是：状态行、消息报头、空行和响应正文。\\n\\n#### 状态行\\n\\nHTTP/1.1）表明HTTP版本为1.1版本，状态码为200，状态消息为（ok）\\n\\n#### 消息报头\\n\\n- Date 相应时间\\n- Cache-control 缓存控制，max-age 相对过期时间\\n- Content-Type 内容类型，比如text/html;charset=utf-8\\n- Expires 过期时间\\n- Etag 请求变量实体值\\n- last-Modified 最后修改时间\\n\\n## 请求过程详解\\n\\n1. 浏览器会先查询`Cache-Conrol`或者`Expires`，来查内容是否过期，如果未过期直接从缓存读取，不发送HTTP请求。否则进入下一步\\n2. 进行域名解析，然后解析出端口号，默认80 ，浏览器建立一条与服务器的tcp连接（三次握手）\\n3. 浏览器判断上次文件返回头中是否含有`Etag`信息，有则带上`if-None-Match`字段信息发送请求给服务端，服务端判断Etag未修改返回304，如果修改就返回200，否则进入下一步\\n4. 浏览器判断上次文件返回头中是否含有`Last-Modified`，有则带上`if-Modified-Since`字段信息发送请求，服务端判断是否失效，有返回200，有效则返回304\\n\\n## 服务端返回状态码\\n\\n- 100：继续。客户端应继续其请求\\n\\n- 101：切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议。websocket等\\n\\n- 200：OK，请求成功\\n- 201：已创建。成功请求并创建了新的资源\\n- 202：已接受。已经接受请求，但未处理完成\\n- 300：重定向，多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择\\n- 301：永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替\\n- 302：临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI\\n- 303：查看其它地址。与301类似。使用GET和POST请求查看\\n- 304：未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源\\n- 400：客户端请求的语法错误，服务器无法理解\\n- 401：请求要求用户的身份认证\\n- 403：服务器理解请求客户端的请求，但是拒绝执行此请求\\n- 404：服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置\\\"您所请求的资源无法找到\\\"的个性页面\\n- 406：请求的资源的内容特性无法满足请求头中的条件，因而无法生成响应实体。 \\n- 500：服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。一般来说，这个问题都会在服务器的程序码出错时出现。\\n- 501：服务器不支持当前请求所需要的某个功能。当服务器无法识别请求的方法，并且无法支持其对任何资源的请求。\"}"],"sourceRoot":""}